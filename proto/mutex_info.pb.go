// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mutex_info.proto

package mutex_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MutexInfo_MsgType int32

const (
	MutexInfo_INI     MutexInfo_MsgType = 0
	MutexInfo_REQUEST MutexInfo_MsgType = 1
	MutexInfo_REPLY   MutexInfo_MsgType = 2
	MutexInfo_FINISH  MutexInfo_MsgType = 3
)

var MutexInfo_MsgType_name = map[int32]string{
	0: "INI",
	1: "REQUEST",
	2: "REPLY",
	3: "FINISH",
}

var MutexInfo_MsgType_value = map[string]int32{
	"INI":     0,
	"REQUEST": 1,
	"REPLY":   2,
	"FINISH":  3,
}

func (x MutexInfo_MsgType) String() string {
	return proto.EnumName(MutexInfo_MsgType_name, int32(x))
}

func (MutexInfo_MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7a8c13912f3eed1f, []int{0, 0}
}

type MutexInfo struct {
	Type                 MutexInfo_MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=MutexInfo_MsgType" json:"type,omitempty"`
	SenderId             int32             `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SourceId             int32             `protobuf:"varint,3,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	DestinationId        int32             `protobuf:"varint,4,opt,name=destination_id,json=destinationId,proto3" json:"destination_id,omitempty"`
	Timestamp            int64             `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MutexInfo) Reset()         { *m = MutexInfo{} }
func (m *MutexInfo) String() string { return proto.CompactTextString(m) }
func (*MutexInfo) ProtoMessage()    {}
func (*MutexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8c13912f3eed1f, []int{0}
}

func (m *MutexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutexInfo.Unmarshal(m, b)
}
func (m *MutexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutexInfo.Marshal(b, m, deterministic)
}
func (m *MutexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutexInfo.Merge(m, src)
}
func (m *MutexInfo) XXX_Size() int {
	return xxx_messageInfo_MutexInfo.Size(m)
}
func (m *MutexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MutexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MutexInfo proto.InternalMessageInfo

func (m *MutexInfo) GetType() MutexInfo_MsgType {
	if m != nil {
		return m.Type
	}
	return MutexInfo_INI
}

func (m *MutexInfo) GetSenderId() int32 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *MutexInfo) GetSourceId() int32 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *MutexInfo) GetDestinationId() int32 {
	if m != nil {
		return m.DestinationId
	}
	return 0
}

func (m *MutexInfo) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterEnum("MutexInfo_MsgType", MutexInfo_MsgType_name, MutexInfo_MsgType_value)
	proto.RegisterType((*MutexInfo)(nil), "MutexInfo")
}

func init() { proto.RegisterFile("mutex_info.proto", fileDescriptor_7a8c13912f3eed1f) }

var fileDescriptor_7a8c13912f3eed1f = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xcf, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x71, 0xb7, 0x69, 0x1a, 0x33, 0x62, 0x59, 0xe6, 0x14, 0xd0, 0x43, 0x28, 0x28, 0x39,
	0xe5, 0xa0, 0xe0, 0x1b, 0x44, 0x1c, 0xb0, 0x45, 0xb7, 0xf5, 0xe0, 0xa9, 0x54, 0x77, 0x2a, 0x7b,
	0xc8, 0x6e, 0xc8, 0x6e, 0xc1, 0xbe, 0xb2, 0x4f, 0x21, 0x59, 0x83, 0x7a, 0xfd, 0xff, 0xbe, 0xc3,
	0x0c, 0xc8, 0xf6, 0x10, 0xf8, 0x73, 0x6b, 0xec, 0xde, 0xd5, 0x5d, 0xef, 0x82, 0x5b, 0x7c, 0x09,
	0xc8, 0x97, 0x43, 0x24, 0xbb, 0x77, 0x78, 0x0d, 0xd3, 0x70, 0xec, 0xb8, 0x10, 0xa5, 0xa8, 0xe6,
	0x37, 0x58, 0xff, 0x4a, 0xbd, 0xf4, 0x1f, 0x9b, 0x63, 0xc7, 0x2a, 0x3a, 0x5e, 0x40, 0xee, 0xd9,
	0x6a, 0xee, 0xb7, 0x46, 0x17, 0x93, 0x52, 0x54, 0xa9, 0x3a, 0xfd, 0x09, 0xa4, 0x23, 0xba, 0x43,
	0xff, 0xce, 0x03, 0x26, 0x23, 0xc6, 0x40, 0x1a, 0xaf, 0x60, 0xae, 0xd9, 0x07, 0x63, 0x77, 0xc1,
	0x38, 0x3b, 0x2c, 0xa6, 0x71, 0x71, 0xfe, 0xaf, 0x92, 0xc6, 0x4b, 0xc8, 0x83, 0x69, 0xd9, 0x87,
	0x5d, 0xdb, 0x15, 0x69, 0x29, 0xaa, 0x44, 0xfd, 0x85, 0xc5, 0x1d, 0x64, 0xe3, 0x3d, 0x98, 0x41,
	0x42, 0x2b, 0x92, 0x27, 0x78, 0x06, 0x99, 0x6a, 0x9e, 0x5f, 0x9a, 0xf5, 0x46, 0x0a, 0xcc, 0x21,
	0x55, 0xcd, 0xd3, 0xe3, 0xab, 0x9c, 0x20, 0xc0, 0xec, 0x9e, 0x56, 0xb4, 0x7e, 0x90, 0xc9, 0xdb,
	0x2c, 0xfe, 0x7c, 0xfb, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x53, 0xae, 0xbe, 0x07, 0x01, 0x00,
	0x00,
}
